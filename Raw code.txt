file name : index. tsx
import Image from "next/image";
import { Geist, Geist_Mono } from "next/font/google";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function Home() {
  return (
    <div
      className={`${geistSans.variable} ${geistMono.variable} grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]`}
    >
      <main className="flex flex-col gap-8 row-start-2 items-center sm:items-start">
        <Image
          className="dark:invert"
          src="/next.svg"
          alt="Next.js logo"
          width={180}
          height={38}
          priority
        />
        <ol className="list-inside list-decimal text-sm text-center sm:text-left font-[family-name:var(--font-geist-mono)]">
          <li className="mb-2">
            Get started by editing{" "}
            <code className="bg-black/[.05] dark:bg-white/[.06] px-1 py-0.5 rounded font-semibold">
              pages/index.tsx
            </code>
            .
          </li>
          <li>Save and see your changes instantly.</li>
        </ol>

        <div className="flex gap-4 items-center flex-col sm:flex-row">
          <a
            className="rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5"
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            <Image
              className="dark:invert"
              src="/vercel.svg"
              alt="Vercel logomark"
              width={20}
              height={20}
            />
            Deploy now
          </a>
          <a
            className="rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:min-w-44"
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Read our docs
          </a>
        </div>
      </main>
      <footer className="row-start-3 flex gap-6 flex-wrap items-center justify-center">
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/file.svg"
            alt="File icon"
            width={16}
            height={16}
          />
          Learn
        </a>
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/window.svg"
            alt="Window icon"
            width={16}
            height={16}
          />
          Examples
        </a>
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://nextjs.org?utm_source=create-next-app&utm_medium=default-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/globe.svg"
            alt="Globe icon"
            width={16}
            height={16}
          />
          Go to nextjs.org â†’
        </a>
      </footer>
    </div>
  );
}








Global. css


:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}




<div 
      style={{
        // Use your own image name/path here:
        backgroundImage: "url('/lock-circuit-bg.jpg')",
        backgroundSize: 'cover',
        backgroundPosition: 'center',
        backgroundRepeat: 'no-repeat',
        height: '100vh',
        width: '100%',
        position: 'relative'
      }}
    >
      {/* 
        Position the button container in the middle of the page.
        Adjust top/left/transform to place it exactly where you want.
      */}
      <div 
        style={{
          position: 'absolute',
          top: '50%',
          left: '50%',
          transform: 'translate(-50%, -50%)'
        }}
      >
        <button
          style={{
            padding: '12px 24px',
            fontSize: '16px',
            borderRadius: '8px',
            backgroundColor: '#0070f3',
            color: '#fff',
            border: 'none',
            cursor: 'pointer',
          }}
          onClick={() => alert('Login button clicked!')}
        >
          Login
        </button>
      </div>
    </div>





echo "# SIRS" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Kamtamvamsi/SIRS.git
git push -u origin main



<a href="/api/auth/Logout" >Logout</a>

<a href="/api/auth/login" >Login</a>


----------------------------------------------------------------------------------------------------

    return(
      <div>
        <Link href="/api/auth/Logout" className='Logout-btn'>
          Logout
        </Link>

      </div>
    );
  }
  

  return (
    <Link href="/api/auth/login" className='login-btn'>
      Login
    </Link>
  );



  import React from 'react'
import { useUser } from '@auth0/nextjs-auth0/client';
import Link from 'next/link';

function index() {
  const { user, error, isLoading } = useUser();
  
  if(isLoading) return <div>Loading....</div>
  if (error) return <div>{error.message}</div>

  
}

export default index;
-----------------------------------------------------------------------------------------------------------




import React, { useState } from 'react';
import { useUser } from '@auth0/nextjs-auth0/client';

export default function Home() {
  const { user, isLoading, error } = useUser();
  const [step, setStep] = useState(null); // null | 'personal' | 'sensitive'
  const [form, setForm] = useState({});
  const [phone, setPhone] = useState('');
  const [apikey, setApikey] = useState('');
  const [response, setResponse] = useState('');

  if (isLoading) return <div className="p-4">Loading...</div>;
  if (error) return <div>{error.message}</div>;
  if (!user) return <a href="/api/auth/login">Login</a>;

  const personalFields = ['Full Name', 'Phone Number', 'Email Address', 'Home Address', 'Date of Birth', 'Education Info', 'Employment Info'];
  const sensitiveFields = ['Aadhaar Card', 'PAN Card Number',  'Religion or Caste'];

  const fields = step === 'personal' ? personalFields : sensitiveFields;

  const handleSubmit = async (e) => {
    e.preventDefault();
    const data = {};
    fields.forEach(f => {
      data[f] = form[f] || '';
    });

    const res = await fetch('http://localhost:3000/api/submit-data', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        user_id: user.sub.replace("|", "_"), // use sub ID as unique
        category: step,
        data,
        phone,
        apikey
      })
    });
    const result = await res.json();
    setResponse(result.status);
  };

  return (
    <div className="p-6 max-w-xl mx-auto space-y-4">
      <h1 className="text-xl font-bold">Welcome, {user.name}</h1>

      {!step && (
        <div className="space-y-2">
          <p className="text-lg">Choose a data category:</p>
          <button onClick={() => setStep('personal')} className="bg-blue-600 text-white px-4 py-2 rounded">Personal Data</button>
          <button onClick={() => setStep('sensitive')} className="bg-red-600 text-white px-4 py-2 rounded ml-2">Sensitive Data</button>
        </div>
      )}

      {step && (
        <form onSubmit={handleSubmit} className="space-y-3">
          <h2 className="text-lg font-medium">Enter {step}:</h2>
          {fields.map((f) => (
            <div key={f}>
              <label className="block text-sm font-medium">{f}</label>
              <input
                className="w-full border p-2 rounded"
                value={form[f] || ''}
                onChange={(e) => setForm({ ...form, [f]: e.target.value })}
              />
            </div>
          ))}
          {step === 'sensitive' && (
            <>
              <label className="block text-sm font-medium">Phone (+91...)</label>
              <input className="w-full border p-2" value={phone} onChange={(e) => setPhone(e.target.value)} />
              <label className="block text-sm font-medium">WhatsApp API Key</label>
              <input className="w-full border p-2" value={apikey} onChange={(e) => setApikey(e.target.value)} />
            </>
          )}
          <button type="submit" className="bg-green-600 text-white px-4 py-2 rounded">Submit</button>
        </form>
      )}

      {response && <p className="text-sm text-gray-700">Server: {response}</p>}
    </div>
  );
}
